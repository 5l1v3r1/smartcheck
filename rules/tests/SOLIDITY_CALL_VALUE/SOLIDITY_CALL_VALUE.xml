<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaName>solidity</pragmaName>
      <pragmaValue>
         <version>
            <versionConstraint>
               <versionOperator>^</versionOperator>0.4.11</versionConstraint>
         </version>
      </pragmaValue>;</pragmaDirective>
   <contractDefinition>contractSoliditySendValue{<contractPart>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>owner;</stateVariableDeclaration>
      </contractPart>
      <contractPart>
         <functionDefinition>functionSoliditySendValue<parameterList>()</parameterList>
            <block>{<statement>
                  <simpleStatement>
                     <expressionStatement>
                        <expression>
                           <expression>
                              <primaryExpression>owner</primaryExpression>
                           </expression>=<expression>
                              <expression>
                                 <primaryExpression>msg</primaryExpression>
                              </expression>.sender</expression>
                        </expression>;</expressionStatement>
                  </simpleStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPart>
      <contractPart>
         <functionDefinition>functionveryDangerousSend<parameterList>(<typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>_to)</parameterList>returns<parameterList>(<typeName>
                  <elementaryTypeName>bool</elementaryTypeName>
               </typeName>)</parameterList>
            <block>{<statement>
                  <ifStatement>if(<expression>
                        <expression>
                           <expression>
                              <primaryExpression>msg</primaryExpression>
                           </expression>.sender</expression>!=<expression>
                           <primaryExpression>owner</primaryExpression>
                        </expression>
                     </expression>)<statement>
                        <throwStatement>throw;</throwStatement>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <simpleStatement>
                     <expressionStatement>
                        <expression>
                           <functionCall>_to.call.value(<functionCallArguments>
                                 <expressionList>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>42</numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expressionList>
                              </functionCallArguments>)</functionCall>
                        </expression>
                     </expressionStatement>
                  </simpleStatement>
               </statement>
               <statement>
                  <simpleStatement>
                     <expressionStatement>
                        <expression>(<expression/>)</expression>;</expressionStatement>
                  </simpleStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>true</primaryExpression>
                     </expression>;</returnStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPart>
      <contractPart>
         <functionDefinition>functiondangerousSend<parameterList>(<typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>_to)</parameterList>returns<parameterList>(<typeName>
                  <elementaryTypeName>bool</elementaryTypeName>
               </typeName>)</parameterList>
            <block>{<statement>
                  <ifStatement>if(<expression>
                        <expression>
                           <expression>
                              <primaryExpression>msg</primaryExpression>
                           </expression>.sender</expression>!=<expression>
                           <primaryExpression>owner</primaryExpression>
                        </expression>
                     </expression>)<statement>
                        <throwStatement>throw;</throwStatement>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <ifStatement>if(<expression>!<expression>
                           <functionCall>_to.call.value(<functionCallArguments>
                                 <expressionList>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>42</numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expressionList>
                              </functionCallArguments>)</functionCall>
                        </expression>
                     </expression>)<statement>
                        <returnStatement>return<expression>
                              <primaryExpression>false</primaryExpression>
                           </expression>;</returnStatement>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>true</primaryExpression>
                     </expression>;</returnStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPart>}</contractDefinition>&lt;EOF&gt;</sourceUnit>